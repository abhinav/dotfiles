set -g prefix C-b

# Ctrl-B twice: Alternate between windows
bind C-b last-window

# Ctrl-R: Reload tmux config
bind-key C-r source-file ~/.tmux.conf \; display "Reloaded .tmux.conf"

# Basic options
set -sg escape-time 0
set -g base-index 1
set -g history-limit 10000
set -g mouse on
set -g repeat-time 1000
set -g default-terminal "screen-256color"

setw -g mode-keys vi
setw -g pane-base-index 1

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "pbcopy"

# Run only sh by default and explicitly open zsh using
# reattach-to-user-namespace. Otherwise we'll end up loading up a zsh shell
# twice.
set -g default-shell /bin/sh
if-shell 'which reattach-to-user-namespace >/dev/null' \
    "set-option -g default-command 'reattach-to-user-namespace -l /bin/zsh'" \
    "set-option -g default-command '/bin/zsh'"


# Resize to smaller only if a smaller client is actually looking at the
# window.
setw -g aggressive-resize on

# Window splitting:
#
# [hold Ctrl] B \   Vertical   split
# [hold Ctrl] B -   Horizontal split
unbind %
unbind '"'
bind-key C-\ split-window -h
bind-key C-_ split-window -v

# Moving between panes: If we're inside vim, send the same keys to vim,
# otherwise move between tmux splits.
#
# See: https://github.com/christoomey/vim-tmux-navigator
#
# Because we take over Ctrl-L, Ctrl-B Ctrl-L is used to send Ctrl-L.
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind C-l send-keys 'C-l'

# Resizing panes
bind-key -r C-J resize-pane -D 10
bind-key -r C-K resize-pane -U 10
bind-key -r C-H resize-pane -L 10
bind-key -r C-L resize-pane -R 10

# Break out/combine
unbind !
bind-key < break-pane
bind-key > choose-tree -b 'join-pane -s %%' -c 'join-pane -s %%'
bind-key ^ choose-tree

# Unused
unbind Down
unbind Up
unbind Left
unbind Right

# Colors and styling

# Different background for non-active panes
setw -g window-style 'bg=#181818'
setw -g window-active-style 'bg=black'

set -g pane-active-border-style 'none'
set -g message-command-style "fg=colour178"
set -g message-style "fg=colour178"

# Status line
set -g status "on"
set -g status-justify "left"
set -g status-left-style "none"
set -g status-right-style "none"
set -g status-style "bg=#181818"

set -g status-left "#[bold] #h #S "
set -g status-right "%Y-%m-%d %H:%M"

setw -g window-status-activity-attr "none"
setw -g window-status-activity-style "underscore"
setw -g window-status-separator "|"
setw -g window-status-style "fg=colour039"
setw -g window-status-format " #I #W "
setw -g window-status-current-format "#[fg=colour154] #I #W "
