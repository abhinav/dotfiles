#!/usr/bin/env python

"""
If called from inside an nvim instance, opens the file inside the host
instance.
"""

# Source: https://gist.github.com/bfredl/e5b05193304a3340e29e998662ffff76

from __future__ import print_function

import os
import sys


args = sys.argv[1:]

# If not inside neovim, don't worry about the arguments.
addr = os.environ.get('NVIM_LISTEN_ADDRESS', None)
if not addr:
    os.execvp('nvim', ['nvim'] + args)

# Otherwise, we only accept file names.
if not args:
    print('USAGE: %s FILE ...' % sys.argv[0])
    sys.exit(1)


def _setup():
    nvim.input('<c-\\><c-n>')  # exit terminal mode
    chid = nvim.channel_id
    nvim.command('augroup EDIT')
    nvim.command('au BufEnter <buffer> call rpcnotify(%s, "n")' % chid)
    nvim.command('au BufEnter <buffer> startinsert')
    nvim.command('augroup END')

    cwd = os.getcwd()
    nvim.vars['files_to_edit'] = [os.path.join(cwd, f) for f in args]
    for f in args:
        nvim.command('exe "drop ".remove(g:files_to_edit, 0)')


def _exit(*args):
    nvim.vars['files_to_edit'] = None
    nvim.command('augroup EDIT')
    nvim.command('au!')
    nvim.command('augroup END')
    nvim.stop_loop()


import neovim
nvim = neovim.attach('socket', path=addr)
nvim.run_loop(_exit, _exit, _setup)
