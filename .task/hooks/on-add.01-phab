#!/usr/bin/env python

"""
Looks for Phabricator Diff and Task IDs in the description of a Task and
annotates them.
"""

import re
import sys
import json
from os import path
from datetime import date

# Eliminate false positives by requiring that the ID be at least 4 digits.
PHAB_RE = re.compile(r'\b([DT]\d{4,})\b')
ARCRC = path.expanduser('~/.arcrc')

def process(task):
    if not path.isfile(ARCRC):
        return '~/.arcrc does not exist'

    phab_ids = PHAB_RE.findall(task['description'])
    if not phab_ids:
        return ''

    arc_url = None
    with open(ARCRC) as f:
        arc_url = json.load(f).get('config', {}).get('default')

    if not arc_url:
        return 'config.default not found in ~/.arcrc'

    if not arc_url.endswith('/'):
        arc_url += '/'

    entry = task.get('entry')
    if not entry:
        entry = date.today().isoformat()

    anns = task.setdefault('annotations', [])
    for p in phab_ids:
        anns.append({'description': arc_url + p, 'entry': entry})


def main(stdin, stdout):
    task = json.loads(stdin.readline())
    msg = process(task)
    print(json.dumps(task), file=stdout)
    if msg:
        print('could not annotate with Phabricator URLs: '+msg)


if __name__ == '__main__':
    main(sys.stdin, sys.stdout)
